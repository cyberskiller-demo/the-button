name: Release Workflow

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '.github/workflows/**'
      - 'README.md'
      - '.gitignore'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Typ wersji do wydania'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Semantic versioning
        id: versioning
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: master
          default_bump: ${{ github.event.inputs.version_type || 'patch' }}
          
      - name: Create Release
        if: steps.versioning.outputs.new_tag
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.versioning.outputs.new_tag }}
          release_name: Release ${{ steps.versioning.outputs.new_tag }}
          body: ${{ steps.versioning.outputs.changelog }}
          draft: false
          prerelease: false
          
   # Tagowanie istniejącego obrazu Docker
      - name: Login to DockerHub
        if: steps.versioning.outputs.new_tag
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Tag and push Docker image with version
        if: steps.versioning.outputs.new_tag
        run: |
          # Pobierz najnowszy obraz
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          docker pull ${{ secrets.DOCKER_USERNAME }}/the-button:${SHORT_SHA}
      
          # Otaguj obraz nowym numerem wersji
          docker tag ${{ secrets.DOCKER_USERNAME }}/the-button:${SHORT_SHA} ${{ secrets.DOCKER_USERNAME }}/the-button:${{ steps.versioning.outputs.new_tag }}
      
         # Wypchnij otagowany obraz do rejestru
         docker push ${{ secrets.DOCKER_USERNAME }}/the-button:${{ steps.versioning.outputs.new_tag }}
      
          # Aktualizuj tag latest
          docker tag ${{ secrets.DOCKER_USERNAME }}/the-button:${SHORT_SHA} ${{ secrets.DOCKER_USERNAME }}/the-button:latest
         docker push ${{ secrets.DOCKER_USERNAME }}/the-button:latest
      
         echo "Obraz Docker został otagowany wersją ${{ steps.versioning.outputs.new_tag }} i wypchnięty do Docker Hub"
